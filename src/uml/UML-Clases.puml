@startuml

skinparam shadowing false
skinparam dpi 150
skinparam linetype ortho
skinparam packageStyle square
skinparam wrapWidth 200

package "Esquema de clases" {
    ' Clase principal que representa un mensaje en el chat público
    class MensajePublico {
        + String id
        + String remitenteId
        + String contenido
        + LocalDateTime fechaHora
    }

    ' Clase para representar una sala de chat público
    class SalaChat {
        + String id
        + String nombreSala
        + List<MensajePublico> mensajes
        + List<String> usuarios
    }

    ' Clase para representar un usuario
    class Usuario {
        + String id
        + String nombre
        + List<String> salas
        + String rol
    }

    ' Clase para credenciales de autenticación
    class Credenciales {
        + String idUsuario
        + String email
        + String password
    }

    ' Clase para manejar invitaciones a las salas
    class Invitacion {
        + String id
        + String idSala
        + String idUsuario
    }

    ' Interfaz para la lógica de repositorio de mensajes públicos
    interface RepositorioMensajePublico {
        + List<MensajePublico> obtenerTodosPorSala(String salaId)
        + MensajePublico guardar(MensajePublico mensaje)
    }

    ' Interfaz para manejar las salas de chat público
    interface RepositorioSalaChat {
        + SalaChat obtenerPorNombre(String nombreSala)
        + List<SalaChat> obtenerTodas()
        + SalaChat guardar(SalaChat salaChat)
    }

    ' Servicio de manejo de mensajes públicos
    class ServicioMensajePublico {
        + List<MensajePublico> listarMensajesPorSala(String salaId)
        + MensajePublico publicarMensaje(String salaId, MensajePublico mensaje)
    }

    ' Servicio de manejo de salas de chat público
    class ServicioSalaChat {
        + SalaChat crearSala(String nombreSala, String usuarioCreadorId)
        + void eliminarSala(String salaId)
        + SalaChat obtenerSalaPorNombre(String nombreSala)
        + List<SalaChat> listarTodasLasSalas()
        + void invitarUsuario(String salaId, String usuarioId)
        + void unirsePorInvitacion(String salaId, String usuarioId)
        + void eliminarUsuario(String salaId, String usuarioId)
        + void salirDeSala(String salaId, String usuarioId)
        + void verificarUsuarioEnSala(String salaId, String nuevoNombre)
    }

    ' Relaciones
    SalaChat *-- MensajePublico : "Contiene mensajes"
    SalaChat *-- Usuario : "Contiene usuarios"
    SalaChat *-- Invitacion : "Tiene invitaciones"
    Usuario o-- Credenciales : "Autenticado por"
    Invitacion --> Usuario : "Enviada a"
    ServicioMensajePublico --> RepositorioMensajePublico : "Usa"
    ServicioMensajePublico --> MensajePublico : "Gestiona mensajes"
    ServicioSalaChat --> RepositorioSalaChat : "Usa"
    ServicioSalaChat --> Invitacion : "Gestiona"
    ServicioSalaChat --> SalaChat : "Gestiona"
}

@enduml